'elm_lang@core@Main@nestedFirst'/1 = fun (__p0) ->
	case __p0 of
		<{'_Tuple2', _a, _b}> when 'true' ->
			letrec
				'_p1'/0 = fun () ->
					_a
				'c'/0 = fun () ->
					let <_1> =
						apply '_p1'/0 ()
					in
						call 'erlang':'element' (2, _1)
				'd'/0 = fun () ->
					let <_1> =
						apply '_p1'/0 ()
					in
						call 'erlang':'element' (3, _1)
			in
				apply 'c'/0 ()
	end
